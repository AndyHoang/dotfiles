# Path to your oh-my-zsh installation.
#zmodload zsh/zprof
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="avit"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
 DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.


#plugins=(git fzf fzf-tab z ssh-agent kubectl zsh-autosuggestions)
plugins=(direnv git fzf ssh-agent ssm)

zstyle :omz:plugins:ssh-agent identities id_ed25519 id_ed25519_github
export DOCKER_DEFAULT_PLATFORM=linux/amd64

source $ZSH/oh-my-zsh.sh


# User configuration
# You may need to manually set your language environment
export LANG=en_US.UTF-8
#Although the other questions list bash methods, they alias cd. Bash provides an inherent method that chains off just the prompt.

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='nvim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
 export SSH_KEY_PATH="~/.ssh/"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias vi="nvim"
# Some copy utils

#continue download
alias wget="wget -c"

# k9s freq update made too many breaking change, im use mise to control k9s version instead
alias k9s="mise x -- k9s "
alias poetry="mise x -- poetry "
alias pre-commit="mise x -- pre-commit "
alias bunx="mise x -- bunx"


export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*"'

export PATH=$PATH:$HOME/.cargo/bin
# Created by `userpath` on 2020-01-01 04:48:19

# Use when vi **
_fzf_compgen_path() {
   fd --hidden --follow --exclude ".git" "$1"
}

# Use when cd **
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" "$1"
}

eval "$(zoxide init zsh)"

#alias brew='env PATH="${PATH//$(pyenv root)\/shims:/}" brew'
export PATH="/opt/homebrew/opt/ncurses/bin:$PATH"


export PATH=$PATH:/opt/homebrew/bin
#export GOPATH=$HOME/go  # or wherever you want your workspace to be
#export PATH=$PATH:$GOPATH/bin
#eval "$(atuin init zsh --disable-up-arrow)"

#export PATH="/opt/homebrew/opt/mysql-client/bin:$PATH"

#. "$HOME/.cargo/env"

kpp() {
    local context="$1"
    local namespace="$2"
    local profile="${3:-bruno}"  # Default to my_profile if not provided
    # Check AWS SSO token validity and login if needed
    if ! aws sts get-caller-identity --profile "$profile" &>/dev/null; then
        echo "AWS SSO token expired or not found. Logging in..."
        aws sso login --profile="$profile"
        # Check if login was successful
        if ! aws sts get-caller-identity --profile "$profile" &>/dev/null; then
            echo "AWS SSO login failed. Please try again."
            return 1
        fi
    fi
    export _C=$(kubectl config get-contexts -o name | gum filter --limit 1 --indicator=" >" --value="$context" --select-if-one) && \
    kubectl config use-context $_C && \
    export _X=$(kubectl get ns | cut -d ' ' -f1 | gum filter --limit 1 --indicator=" >" --value="$namespace" --select-if-one) && k9s -n $_X
}

alias icat="kitten icat"
export PATH="$HOME/.local/bin:$PATH"
